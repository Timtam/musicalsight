{"version":3,"sources":["pages/home/Home.tsx","pages/imprint/Imprint.tsx","pages/note/Note.tsx","components/Playback.tsx","pages/notes/Notes.tsx","pages/scales/Scales.tsx","components/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","Helmet","Card","className","Body","Title","Text","Component","Imprint","Note","props","note","match","params","charAt","this","toUpperCase","substr","toString","onClick","a","playNote","synth","Tone","toDestination","triggerAttackRelease","notes","withRouter","Notes","ListGroup","Item","action","href","Scales","ScaleType","names","sort","map","scale","escape","Navigation","Container","Navbar","bg","variant","Collapse","Nav","Link","as","to","active","exact","path","component","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b56017d9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Helmet } from \"react-helmet\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>Home - Musical Sight</title>\n                </Helmet>\n\n                <Card className=\"text-center\">\n                    <Card.Body>\n                        <Card.Title>Welcome!</Card.Title>\n                        <Card.Text>\n                            Musical Sight aims to provide useful information\n                            about music theory, notes, scales and alot more.\n                            Most of the stuff shown here is common knowledge to\n                            sighted people who are able to communicate knowledge\n                            via slides, video material and more, while blind\n                            people often have to stick with learning through\n                            their ears only. To help them understand things a\n                            bit better, Musical Sight will try to organize\n                            information in a way that is more useful for blind\n                            people, including note and scale sound previews.\n                            Keep in mind however that this is still a fan\n                            website. Neither do I guarantee the correctness of\n                            all the information that is shown here, nor can I be\n                            made responsible for any potential damage that is\n                            caused to you by using this website.\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Helmet } from \"react-helmet\";\n\nclass Imprint extends Component {\n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>Imprint - Musical Sight</title>\n                </Helmet>\n\n                <Card className=\"text-center\">\n                    <Card.Body>\n                        <Card.Title>Imprint and related information</Card.Title>\n                        <Card.Text>\n                            Find all the relevant information here!\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </>\n        );\n    }\n}\n\nexport default Imprint;\n","import { Helmet } from \"react-helmet\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport Playback from \"../../components/Playback\";\n\ntype PathParamsType = {\n    note: string;\n};\n\ntype PropsType = RouteComponentProps<PathParamsType> & {};\n\nclass Note extends Playback<PropsType> {\n    note: string;\n\n    constructor(props: PropsType) {\n        super(props);\n\n        // parsing the note out of the url parameter\n        this.note = this.props.match.params.note.charAt(0);\n\n        if (this.props.match.params.note.match(/[a-g]-sharp/i))\n            this.note += \"#\";\n        else if (this.props.match.params.note.match(/[a-g]-flat/i))\n            this.note += \"b\";\n    }\n\n    toString() {\n        return this.note[0].toUpperCase() + this.note.substr(1);\n    }\n\n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>{this.toString()} - Musical Sight</title>\n                </Helmet>\n\n                <h3>{this.toString()}</h3>\n\n                <button\n                    onClick={async () => {\n                        await this.playNote(this.note + \"4\");\n                    }}\n                >\n                    Listen now\n                </button>\n            </>\n        );\n    }\n}\n\nexport default withRouter(Note);\n","import { Component } from \"react\";\nimport * as Tone from \"tone\";\n\nclass Playback<T> extends Component<T, {}> {\n    synth: Tone.PolySynth;\n\n    constructor(props: T) {\n        super(props);\n\n        this.synth = new Tone.PolySynth(Tone.Synth);\n\n        this.synth.toDestination();\n    }\n\n    async playNote(note: string) {\n        await Tone.start();\n\n        this.synth.triggerAttackRelease(note, \"8n\");\n    }\n\n    async playChord(notes: string[]) {\n        await Tone.start();\n\n        this.synth.triggerAttackRelease(notes, \"8n\");\n    }\n}\n\nexport default Playback;\n","import React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Helmet } from \"react-helmet\";\n\nclass Notes extends Component {\n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>Notes - Musical Sight</title>\n                </Helmet>\n\n                <ListGroup>\n                    <ListGroup.Item action href=\"/notes/c\">\n                        C\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/c-sharp\">\n                        C sharp\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/d\">\n                        D\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/d-sharp\">\n                        D sharp\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/e\">\n                        E\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/f\">\n                        F\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/f-sharp\">\n                        F sharp\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/g\">\n                        G\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/g-sharp\">\n                        G sharp\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/a\">\n                        A\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/a-sharp\">\n                        A sharp\n                    </ListGroup.Item>\n                    <ListGroup.Item action href=\"/notes/b\">\n                        B\n                    </ListGroup.Item>\n                </ListGroup>\n            </>\n        );\n    }\n}\n\nexport default Notes;\n","import ScaleType from \"@tonaljs/scale-type\";\nimport React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Helmet } from \"react-helmet\";\n\nclass Scales extends Component {\n    render() {\n        return (\n            <>\n                <Helmet>\n                    <title>Scales - Musical Sight</title>\n                </Helmet>\n\n                <ListGroup>\n                    {ScaleType.names()\n                        .sort()\n                        .map((scale) => (\n                            <ListGroup.Item\n                                action\n                                href={\"/scale/\" + escape(scale)}\n                            >\n                                {scale}\n                            </ListGroup.Item>\n                        ))}\n                </ListGroup>\n            </>\n        );\n    }\n}\n\nexport default Scales;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Home from \"../pages/home/Home\";\nimport Imprint from \"../pages/imprint/Imprint\";\nimport Note from \"../pages/note/Note\";\nimport Notes from \"../pages/notes/Notes\";\nimport Scales from \"../pages/scales/Scales\";\n\nclass Navigation extends Component {\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Navbar className=\"fixed-top\" bg=\"light\" variant=\"light\">\n                        <Navbar.Collapse>\n                            <Nav className=\"mr-auto\">\n                                <Nav.Item>\n                                    <Nav.Link as={Link} to=\"/\" active>\n                                        Home\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link as={Link} to=\"/notes\">\n                                        Notes\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link as={Link} to=\"/scales\">\n                                        Scales\n                                    </Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link as={Link} to=\"/imprint\">\n                                        Imprint\n                                    </Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </Container>\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/imprint\" component={Imprint} />\n                        <Route exact path=\"/notes\" component={Notes} />\n                        <Route path=\"/notes/:note([a-g])\" component={Note} />\n                        <Route\n                            path=\"/notes/:note([a-g]-sharp)\"\n                            component={Note}\n                        />\n                        <Route\n                            path=\"/notes/:note([a-g]-flat)\"\n                            component={Note}\n                        />\n                        <Route exact path=\"/scales\" component={Scales} />\n                        <Route\n                            render={function () {\n                                return <p>Not found</p>;\n                            }}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n    return <Navigation></Navigation>;\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}